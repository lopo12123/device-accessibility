use enigo::{Key as EnigoKey, MouseButton as EnigoMouse};

pub struct EnigoMapper {}

#[allow(unused)]
impl EnigoMapper {
    /// enigo -> String
    pub fn encode_key(key: EnigoKey) -> Option<String> {
        match key {
            EnigoKey::F1 => Some(String::from("F1")),
            EnigoKey::F2 => Some(String::from("F2")),
            EnigoKey::F3 => Some(String::from("F3")),
            EnigoKey::F4 => Some(String::from("F4")),
            EnigoKey::F5 => Some(String::from("F5")),
            EnigoKey::F6 => Some(String::from("F6")),
            EnigoKey::F7 => Some(String::from("F7")),
            EnigoKey::F8 => Some(String::from("F8")),
            EnigoKey::F9 => Some(String::from("F9")),
            EnigoKey::F10 => Some(String::from("F10")),
            EnigoKey::F11 => Some(String::from("F11")),
            EnigoKey::F12 => Some(String::from("F12")),
            EnigoKey::Layout('0') => Some(String::from("Digit0")),
            EnigoKey::Layout('1') => Some(String::from("Digit1")),
            EnigoKey::Layout('2') => Some(String::from("Digit2")),
            EnigoKey::Layout('3') => Some(String::from("Digit3")),
            EnigoKey::Layout('4') => Some(String::from("Digit4")),
            EnigoKey::Layout('5') => Some(String::from("Digit5")),
            EnigoKey::Layout('6') => Some(String::from("Digit6")),
            EnigoKey::Layout('7') => Some(String::from("Digit7")),
            EnigoKey::Layout('8') => Some(String::from("Digit8")),
            EnigoKey::Layout('9') => Some(String::from("Digit9")),
            EnigoKey::Layout('a') => Some(String::from("KeyA")),
            EnigoKey::Layout('b') => Some(String::from("KeyB")),
            EnigoKey::Layout('c') => Some(String::from("KeyC")),
            EnigoKey::Layout('d') => Some(String::from("KeyD")),
            EnigoKey::Layout('e') => Some(String::from("KeyE")),
            EnigoKey::Layout('f') => Some(String::from("KeyF")),
            EnigoKey::Layout('g') => Some(String::from("KeyG")),
            EnigoKey::Layout('h') => Some(String::from("KeyH")),
            EnigoKey::Layout('i') => Some(String::from("KeyI")),
            EnigoKey::Layout('j') => Some(String::from("KeyJ")),
            EnigoKey::Layout('k') => Some(String::from("KeyK")),
            EnigoKey::Layout('l') => Some(String::from("KeyL")),
            EnigoKey::Layout('m') => Some(String::from("KeyM")),
            EnigoKey::Layout('n') => Some(String::from("KeyN")),
            EnigoKey::Layout('o') => Some(String::from("KeyO")),
            EnigoKey::Layout('p') => Some(String::from("KeyP")),
            EnigoKey::Layout('q') => Some(String::from("KeyQ")),
            EnigoKey::Layout('r') => Some(String::from("KeyR")),
            EnigoKey::Layout('s') => Some(String::from("KeyS")),
            EnigoKey::Layout('t') => Some(String::from("KeyT")),
            EnigoKey::Layout('u') => Some(String::from("KeyU")),
            EnigoKey::Layout('v') => Some(String::from("KeyV")),
            EnigoKey::Layout('w') => Some(String::from("KeyW")),
            EnigoKey::Layout('x') => Some(String::from("KeyX")),
            EnigoKey::Layout('y') => Some(String::from("KeyY")),
            EnigoKey::Layout('z') => Some(String::from("KeyZ")),
            EnigoKey::Meta => Some(String::from("Meta")),
            EnigoKey::Escape => Some(String::from("Escape")),
            EnigoKey::Tab => Some(String::from("Tab")),
            EnigoKey::CapsLock => Some(String::from("CapsLock")),
            EnigoKey::Shift => Some(String::from("ShiftLeft")),
            EnigoKey::Control => Some(String::from("ControlLeft")),
            EnigoKey::Alt => Some(String::from("AltLeft")),
            EnigoKey::Space => Some(String::from("Space")),
            EnigoKey::UpArrow => Some(String::from("ArrowUp")),
            EnigoKey::RightArrow => Some(String::from("ArrowRight")),
            EnigoKey::DownArrow => Some(String::from("ArrowDown")),
            EnigoKey::LeftArrow => Some(String::from("ArrowLeft")),
            EnigoKey::Return => Some(String::from("Enter")),
            EnigoKey::Backspace => Some(String::from("Backspace")),
            EnigoKey::Delete => Some(String::from("Delete")),
            EnigoKey::Home => Some(String::from("Home")),
            EnigoKey::PageUp => Some(String::from("PageUp")),
            EnigoKey::PageDown => Some(String::from("PageDown")),
            EnigoKey::End => Some(String::from("End")),
            EnigoKey::Layout('`') => Some(String::from("Backquote")),
            EnigoKey::Layout('-') => Some(String::from("Minus")),
            EnigoKey::Layout('=') => Some(String::from("Equal")),
            EnigoKey::Layout('[') => Some(String::from("BracketLeft")),
            EnigoKey::Layout(']') => Some(String::from("BracketRight")),
            EnigoKey::Layout(',') => Some(String::from("Comma")),
            EnigoKey::Layout('.') => Some(String::from("Period")),
            EnigoKey::Layout(';') => Some(String::from("Semicolon")),
            EnigoKey::Layout('\'') => Some(String::from("Quote")),
            EnigoKey::Layout('/') => Some(String::from("Slash")),
            EnigoKey::Layout('\\') => Some(String::from("BackSlash")),
            _ => None
        }
    }

    /// String -> enigo
    pub fn decode_key(key: String) -> Option<EnigoKey> {
        match &key[..] {
            "F1" => Some(EnigoKey::F1),
            "F2" => Some(EnigoKey::F2),
            "F3" => Some(EnigoKey::F3),
            "F4" => Some(EnigoKey::F4),
            "F5" => Some(EnigoKey::F5),
            "F6" => Some(EnigoKey::F6),
            "F7" => Some(EnigoKey::F7),
            "F8" => Some(EnigoKey::F8),
            "F9" => Some(EnigoKey::F9),
            "F10" => Some(EnigoKey::F10),
            "F11" => Some(EnigoKey::F11),
            "F12" => Some(EnigoKey::F12),
            "Digit0" | "Numpad0" => Some(EnigoKey::Layout('0')),
            "Digit1" | "Numpad1" => Some(EnigoKey::Layout('1')),
            "Digit2" | "Numpad2" => Some(EnigoKey::Layout('2')),
            "Digit3" | "Numpad3" => Some(EnigoKey::Layout('3')),
            "Digit4" | "Numpad4" => Some(EnigoKey::Layout('4')),
            "Digit5" | "Numpad5" => Some(EnigoKey::Layout('5')),
            "Digit6" | "Numpad6" => Some(EnigoKey::Layout('6')),
            "Digit7" | "Numpad7" => Some(EnigoKey::Layout('7')),
            "Digit8" | "Numpad8" => Some(EnigoKey::Layout('8')),
            "Digit9" | "Numpad9" => Some(EnigoKey::Layout('9')),
            "KeyA" => Some(EnigoKey::Layout('a')),
            "KeyB" => Some(EnigoKey::Layout('b')),
            "KeyC" => Some(EnigoKey::Layout('c')),
            "KeyD" => Some(EnigoKey::Layout('d')),
            "KeyE" => Some(EnigoKey::Layout('e')),
            "KeyF" => Some(EnigoKey::Layout('f')),
            "KeyG" => Some(EnigoKey::Layout('g')),
            "KeyH" => Some(EnigoKey::Layout('h')),
            "KeyI" => Some(EnigoKey::Layout('i')),
            "KeyJ" => Some(EnigoKey::Layout('j')),
            "KeyK" => Some(EnigoKey::Layout('k')),
            "KeyL" => Some(EnigoKey::Layout('l')),
            "KeyM" => Some(EnigoKey::Layout('m')),
            "KeyN" => Some(EnigoKey::Layout('n')),
            "KeyO" => Some(EnigoKey::Layout('o')),
            "KeyP" => Some(EnigoKey::Layout('p')),
            "KeyQ" => Some(EnigoKey::Layout('q')),
            "KeyR" => Some(EnigoKey::Layout('r')),
            "KeyS" => Some(EnigoKey::Layout('s')),
            "KeyT" => Some(EnigoKey::Layout('t')),
            "KeyU" => Some(EnigoKey::Layout('u')),
            "KeyV" => Some(EnigoKey::Layout('v')),
            "KeyW" => Some(EnigoKey::Layout('w')),
            "KeyX" => Some(EnigoKey::Layout('x')),
            "KeyY" => Some(EnigoKey::Layout('y')),
            "KeyZ" => Some(EnigoKey::Layout('z')),
            "Meta" => Some(EnigoKey::Meta),
            "Escape" => Some(EnigoKey::Escape),
            "Tab" => Some(EnigoKey::Tab),
            "CapsLock" => Some(EnigoKey::CapsLock),
            "ShiftLeft" | "ShiftRight" => Some(EnigoKey::Shift),
            "ControlLeft" | "ControlRight" => Some(EnigoKey::Control),
            "AltLeft" | "AltRight" => Some(EnigoKey::Alt),
            "Space" => Some(EnigoKey::Space),
            "ArrowUp" => Some(EnigoKey::UpArrow),
            "ArrowRight" => Some(EnigoKey::RightArrow),
            "ArrowDown" => Some(EnigoKey::DownArrow),
            "ArrowLeft" => Some(EnigoKey::LeftArrow),
            "Enter" => Some(EnigoKey::Return),
            "Backspace" => Some(EnigoKey::Backspace),
            "Delete" => Some(EnigoKey::Delete),
            "Home" => Some(EnigoKey::Home),
            "PageUp" => Some(EnigoKey::PageUp),
            "PageDown" => Some(EnigoKey::PageDown),
            "End" => Some(EnigoKey::End),
            "Backquote" => Some(EnigoKey::Layout('`')),
            "Minus" | "NumpadSubtract" => Some(EnigoKey::Layout('-')),
            "Equal" => Some(EnigoKey::Layout('=')),
            "BracketLeft" => Some(EnigoKey::Layout('[')),
            "BracketRight" => Some(EnigoKey::Layout(']')),
            "Comma" => Some(EnigoKey::Layout(',')),
            "Period" => Some(EnigoKey::Layout('.')),
            "Semicolon" => Some(EnigoKey::Layout(';')),
            "Quote" => Some(EnigoKey::Layout('\'')),
            "Slash" | "NumpadDivide" => Some(EnigoKey::Layout('/')),
            "BackSlash" => Some(EnigoKey::Layout('\\')),
            _ => None
        }
    }

    /// enigo -> String
    pub fn encode_mouse(mouse: EnigoMouse) -> Option<String> {
        match mouse {
            EnigoMouse::Left => Some(String::from("Left")),
            EnigoMouse::Middle => Some(String::from("Middle")),
            EnigoMouse::Right => Some(String::from("Right")),
            _ => None
        }
    }

    /// String -> enigo
    pub fn decode_mouse(mouse: String) -> Option<EnigoMouse> {
        match &mouse[..] {
            "Left" => Some(EnigoMouse::Left),
            "Middle" => Some(EnigoMouse::Middle),
            "Right" => Some(EnigoMouse::Right),
            _ => None
        }
    }
}